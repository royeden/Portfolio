import React from 'react';
import { motion } from 'framer-motion';
import Fade from './Fade';

const blobs = [
  'M 383.4 168.7 C 408.4 186.3 429.3 208.9 463 238.5 C 496.7 268.2 543.4 305 539.5 334.7 C 535.7 364.5 481.3 387.2 441 407.6 C 400.7 428 374.4 446.1 351.8 432.7 C 329.2 419.3 310.2 374.5 266.6 378.1 C 222.9 381.6 154.5 433.5 115.4 434.3 C 76.2 435.2 66.4 385.1 56.7 333.5 C 47 281.9 37.5 228.9 76.5 220.5 C 115.4 212.1 202.9 248.5 248.2 240.2 C 293.5 231.9 296.8 179 313 158.8 C 329.2 138.6 358.4 151.1 383.4 168.7 Z',
  'M 390.5 228.5 C 428.2 223.9 477.4 242 477.5 265.3 C 477.559 279.127 460.474 294.805 441.677 314.851 C 428.665 328.729 414.832 344.7 405.3 363.6 C 382 409.9 384.2 473.8 370.3 467.9 C 362.704 464.621 350.271 440.498 335.969 414.119 C 324.1 392.225 310.944 368.777 298.2 354.4 C 270.1 322.7 243.9 335.1 238.1 332.3 C 232.3 329.4 247 311.3 229.7 266.5 C 212.5 221.7 163.4 150.2 169.8 149.3 C 176.2 148.4 238.1 218.2 282.2 239.4 C 326.4 260.6 352.7 233.2 390.5 228.5 Z',
  'M 348.6 197.1 C 366.2 235.7 385.8 243.8 401 259.1 C 416.2 274.5 426.9 297.1 445.1 336.2 C 463.3 375.2 489 430.6 469.7 439.9 C 450.5 449.3 386.4 412.5 337 427.7 C 287.7 443 253.1 510.1 228.1 515.9 C 203.1 521.8 187.7 466.2 191.4 421.4 C 195.1 376.6 217.8 342.6 200.9 306.7 C 184 270.8 127.4 233.1 120.4 205.4 C 113.5 177.8 156.2 160.2 194.4 131 C 232.6 101.8 266.3 60.9 290.9 75.1 C 315.5 89.2 331 158.4 348.6 197.1 Z',
  'M 376.4 192.7 C 393 214.7 412.475 229.225 430.863 242.412 C 449.25 255.6 466.55 267.45 478.8 284.1 C 503.3 317.4 507.8 370 488.1 412.8 C 468.4 455.6 424.5 488.7 386.4 475.9 C 367.3 469.55 349.625 451.725 330.462 433.512 C 311.3 415.3 290.65 396.7 265.6 388.8 C 215.5 373 147.8 400 110.2 385.2 C 72.6 370.4 65.2 313.9 77.8 264.1 C 90.5 214.3 123.3 171.4 163.6 128.7 C 204 85.9 252 43.5 286.8 59.2 C 321.6 74.9 343.3 148.8 376.4 192.7 Z',
  'M 453.6 61 C 499.1 90.2 536 132.8 558.4 182 C 580.9 231.1 588.9 286.9 581.2 340.4 C 573.5 393.9 550.1 445.2 514.7 486.1 C 479.3 526.9 431.9 557.4 380 572.6 C 328.2 587.8 271.8 587.8 220 572.6 C 168.1 557.4 120.7 526.9 85.3 486.1 C 49.9 445.2 26.5 393.9 18.8 340.4 C 11.1 286.9 19.1 231.1 41.6 182 C 64 132.8 100.9 90.2 146.4 61 C 191.9 31.7 245.9 15.9 300 15.9 C 354.1 15.9 408.1 31.7 453.6 61 Z',
  'M 377 170 C 399.6 194.7 417.6 216.4 437.3 242.4 C 457 268.3 478.5 298.5 474.8 325.2 C 471.1 351.9 442.2 375.1 413.6 386.4 C 385.1 397.8 356.8 397.3 334.4 392.8 C 312 388.3 295.6 379.6 263.3 387.4 C 230.9 395.1 182.7 419.3 167.9 410.1 C 153 400.9 171.6 358.3 194.5 332.3 C 217.4 306.2 244.6 296.7 242.7 262.6 C 240.8 228.6 209.9 170.1 214.6 137.2 C 219.3 104.4 259.6 97.2 293.4 107.4 C 327.2 117.7 354.4 145.3 377 170 Z',
  'M 395.6 265.6 C 413.552 271.055 434.503 281.017 452.963 293.246 C 479.85 311.06 501.452 333.685 500.8 354.2 C 499.6 388.9 434.9 417.4 390.8 407.5 C 346.7 397.6 323.1 349.3 265 335.5 C 238.898 329.356 205.837 330.171 174.413 330.612 C 135.77 331.153 99.604 331.129 81.9 316.9 C 63.588 302.228 64.94 272.42 78.064 246.881 C 88.018 227.511 104.744 210.595 124.8 204.6 C 149.036 197.355 178.108 206.003 206.777 218.124 C 233.112 229.26 259.107 243.327 280.7 250.7 C 325.8 266.1 351.6 252.2 395.6 265.6 Z',
  'M 424.5 166.9 C 446.9 178.05 470.55 191.55 488.613 206.675 C 506.675 221.8 519.15 238.55 519.2 256.2 C 519.4 291.6 469.9 330.5 435.9 368.3 C 402 406.2 383.7 442.8 354 457.5 C 324.4 472.3 283.5 465.1 233.5 457.7 C 183.5 450.4 124.4 443 117.1 413.7 C 109.7 384.4 154.1 333.2 174.1 287.8 C 184.05 265.1 187.9 243.8 191.375 224.775 C 194.85 205.75 197.95 189 206.4 175.4 C 223.3 148.3 261.6 133.6 300.7 132.7 C 339.9 131.8 379.7 144.7 424.5 166.9 Z',
  'M 333.3 283 C 358.4 281.4 404.5 277.4 405.1 281.4 C 405.6 285.3 360.6 297.1 345.5 329 C 340.433 339.6 338.7 352.422 338.441 365.037 C 338.181 377.652 339.396 390.059 340.226 399.83 C 341.056 409.6 341.5 416.733 339.7 418.8 C 334.3 425 308.8 385.5 282.9 367.3 C 257.1 349 230.9 352 227.6 343.3 C 224.3 334.5 244 314.1 254.8 298.9 C 265.6 283.7 267.7 273.9 273.8 272.1 C 279.9 270.3 289.9 276.7 297 280.2 C 304.1 283.8 308.1 284.6 333.3 283 Z'
];

function generateBlobPaths(
  blob: string,
  blobIndex: number,
  blobsArray: string[]
): string[] {
  const head = blobsArray.filter((_, index) => index < blobIndex);
  const tail = blobsArray.filter((_, index) => index > blobIndex);
  return [blobsArray[blobIndex], ...tail, ...head, blobsArray[blobIndex]];
}

const blobPaths = blobs.map(generateBlobPaths);

type BlobProps = {
  color: string;
  paths: string[];
};

function Blob({ color, paths }: BlobProps): JSX.Element {
  return (
    <>
      <div className="blob">
        <svg
          height="600"
          width="600"
          viewBox="0 0 600 600"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g>
            <motion.path
              animate={{
                d: paths,
                scale: [1, 0.7, 1.05, 0.65, 1]
              }}
              initial={{ d: paths[0] }}
              fill={`${color}33`}
              transition={{ duration: 30, loop: Infinity }}
            />
          </g>
        </svg>
      </div>
      <style jsx>{`
        /*@keyframes float {
          0% {
            transform: scale(1) translate(50%, 50%);
          }
          20% {
            transform: translate(-5%, 65%) rotate(55deg);
          }
          38% {
            transform: translate(110%, -5%) scale(0.8) rotate(160deg);
          }
          60% {
            transform: translate(100%, 0) scale(1.2) rotate(240deg);
          }
          78% {
            transform: translate(0, 5%) scale(1.3) rotate(-40deg);
          }
          100% {
            transform: scale(1) translate(50%, 50%);
          }
        }*/

        .blob {
          /*animation: float 20s linear infinite;*/
          align-items: center;
          display: flex;
          height: 33vh;
          justify-content: center;
          width: 33vw;
          z-index: 0;
        }

        @media (max-width: 600px) {
          .blob {
            height: 11vh;
            width: 100vh;
          }
        }
      `}</style>
    </>
  );
}

function Blobs({ color }: { color: string }): JSX.Element {
  return (
    <>
      <Fade>
        <div className="blobs">
          {blobPaths.map(paths => (
            <Blob key={paths[0]} color={color} paths={paths} />
          ))}
        </div>
      </Fade>
      <style jsx>{`
        .blobs {
          top: 0;
          display: flex;
          flex-wrap: wrap;
          height: 100%;
          justify-content: center;
          min-height: 100vh;
          position: absolute;
          width: 100vw;
          z-index: 0;
        }
      `}</style>
    </>
  );
}

export default Blobs;
