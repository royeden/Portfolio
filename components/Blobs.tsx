// TODO transform to a background
import React from 'react';

const blobs = [
  'M124.5,-133.1C169.3,-110.8,219.1,-79.1,219.2,-43.8C219.4,-8.4,169.9,30.5,135.9,68.3C102,106.2,83.7,142.8,54,157.5C24.4,172.3,-16.5,165.1,-66.5,157.7C-116.5,150.4,-175.6,143,-182.9,113.7C-190.3,84.4,-145.9,33.2,-125.9,-12.2C-106,-57.6,-110.5,-97.4,-93.6,-124.6C-76.7,-151.7,-38.4,-166.4,0.7,-167.3C39.9,-168.2,79.7,-155.3,124.5,-133.1Z',
  'M77,-130C99.6,-105.3,117.6,-83.6,137.3,-57.6C157,-31.7,178.5,-1.5,174.8,25.2C171.1,51.9,142.2,75.1,113.6,86.4C85.1,97.8,56.8,97.3,34.4,92.8C12,88.3,-4.4,79.6,-36.7,87.4C-69.1,95.1,-117.3,119.3,-132.1,110.1C-147,100.9,-128.4,58.3,-105.5,32.3C-82.6,6.2,-55.4,-3.3,-57.3,-37.4C-59.2,-71.4,-90.1,-129.9,-85.4,-162.8C-80.7,-195.6,-40.4,-202.8,-6.6,-192.6C27.2,-182.3,54.4,-154.7,77,-130Z',
  'M109,-154.5C142.4,-148.2,171.3,-119.8,167.8,-88.1C164.4,-56.5,128.7,-21.5,103.6,0.8C78.4,23.1,63.8,32.8,58.6,65.9C53.5,99.1,57.9,155.6,38.9,185.1C20,214.6,-22.3,217.2,-48,195.1C-73.7,173.1,-83,126.5,-99.1,93.7C-115.2,61,-138.3,42.1,-146,18.3C-153.6,-5.6,-146,-34.4,-131.8,-58C-117.6,-81.6,-96.9,-100.1,-73.9,-111.1C-50.8,-122.1,-25.4,-125.5,6.2,-135.2C37.8,-144.9,75.7,-160.8,109,-154.5Z',
  'M48.6,-102.9C66.2,-64.3,85.8,-56.2,101,-40.9C116.2,-25.5,126.9,-2.9,145.1,36.2C163.3,75.2,189,130.6,169.7,139.9C150.5,149.3,86.4,112.5,37,127.7C-12.3,143,-46.9,210.1,-71.9,215.9C-96.9,221.8,-112.3,166.2,-108.6,121.4C-104.9,76.6,-82.2,42.6,-99.1,6.7C-116,-29.2,-172.6,-66.9,-179.6,-94.6C-186.5,-122.2,-143.8,-139.8,-105.6,-169C-67.4,-198.2,-33.7,-239.1,-9.1,-224.9C15.5,-210.8,31,-141.6,48.6,-102.9Z',
  'M76.4,-107.3C109.6,-63.3,154.3,-49.2,178.8,-15.9C203.3,17.4,207.8,70,188.1,112.8C168.4,155.6,124.5,188.7,86.4,175.9C48.2,163.2,15.7,104.6,-34.4,88.8C-84.5,73,-152.2,100,-189.8,85.2C-227.4,70.4,-234.8,13.9,-222.2,-35.9C-209.5,-85.7,-176.7,-128.6,-136.4,-171.3C-96,-214.1,-48,-256.5,-13.2,-240.8C21.6,-225.1,43.3,-151.2,76.4,-107.3Z',
  'M33.3,-17C58.4,-18.6,104.5,-22.6,105.1,-18.6C105.6,-14.7,60.6,-2.9,45.5,29C30.3,60.8,45.1,112.6,39.7,118.8C34.3,125,8.8,85.5,-17.1,67.3C-42.9,49,-69.1,52,-72.4,43.3C-75.7,34.5,-56,14.1,-45.2,-1.1C-34.4,-16.3,-32.3,-26.1,-26.2,-27.9C-20.1,-29.7,-10.1,-23.3,-3,-19.8C4.1,-16.2,8.1,-15.4,33.3,-17Z',
  'M90.5,-71.5C128.2,-76.1,177.4,-58,177.5,-34.7C177.6,-11.3,128.6,17.4,105.3,63.6C82,109.9,84.2,173.8,70.3,167.9C56.4,161.9,26.3,86.1,-1.8,54.4C-29.9,22.7,-56.1,35.1,-61.9,32.3C-67.7,29.4,-53,11.3,-70.3,-33.5C-87.5,-78.3,-136.6,-149.8,-130.2,-150.7C-123.8,-151.6,-61.9,-81.8,-17.8,-60.6C26.4,-39.4,52.7,-66.8,90.5,-71.5Z'
];

type BlobProps = {
  color: string;
  path: string;
};

function Blob({ color, path }: BlobProps): JSX.Element {
  return (
    <>
      <div className="blob">
        <svg
          width="600"
          height="600"
          viewBox="0 0 600 600"
          xmlns="http://www.w3.org/2000/svg"
        >
          <g transform="translate(300,300)">
            <path d={path} fill={`${color}33`} />
          </g>
        </svg>
      </div>
      <style jsx>{`
        @keyframes float {
          0% {
            transform: scale(1) translate(50%, 50%);
          }
          /* 18% {
            transform: translate(-5%, 60%) rotate(50deg);
          } */
          20% {
            transform: translate(-5%, 65%) rotate(55deg);
          }
          38% {
            transform: translate(110%, -5%) scale(0.8) rotate(160deg);
          }
          /* 40% {
            transform: translate(110%, -5%) scale(0.8) rotate(170deg);
          } */
          /* 58% {
            transform: translate(100%, 0) scale(1.2) rotate(220deg);
          } */
          60% {
            transform: translate(100%, 0) scale(1.2) rotate(240deg);
          }
          78% {
            transform: translate(0, 5%) scale(1.3) rotate(-40deg);
          }
          /* 80% {
            transform: translate(0, 5%) scale(1.3) rotate(-30deg);
          } */
          100% {
            transform: scale(1) translate(50%, 50%);
          }
        }

        .blob {
          animation: float 120s linear infinite;
          display: flex;
          height: 50vmax;
          left: 0;
          position: absolute;
          top: 0;
          transform-origin: 50% 50%;
          width: 50vmax;
          z-index: 0;
        }
      `}</style>
    </>
  );
}

function Blobs({ color }: { color: string }): JSX.Element {
  return (
    <>
      <div className="blobs">
        {blobs.map(blob => (
          <Blob key={blob} color={color} path={blob} />
        ))}
      </div>
      <style jsx>{`
        .blobs {
          position: absolute;
          height: 100%;
          min-height: 100vh;
          display: flex;
          width: 100vw;
          z-index: 0;
        }
      `}</style>
    </>
  );
}

export default Blobs;
